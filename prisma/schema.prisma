// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                              String         @id @default(cuid())
  email                           String         @unique
  password                        String
  passwordResetToken              String?        @map("password_reset_token") @unique
  passwordResetTokenExpiresAt     DateTime?      @map("password_reset_token_expires_at")
  isDeleted                       Boolean        @default(false) @map("is_deleted")
  isEmailConfirmed                Boolean        @default(false) @map("is_email_confirmed")
  emailConfirmationToken          String?        @map("email_confirmation_token") @unique
  emailConfirmationTokenExpiresAt DateTime?      @map("email_confirmation_token_expires_at")
  refreshTokens                   RefreshToken[]
  customer                        Customer?
  invitations                     Invitation[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")

  @@map("refresh_tokens")
}

model Reservation {
  id          String   @id @default(cuid())
  recurringId String?  @map("recurring_id")
  name        String
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  String   @map("customer_id")
  startTime   DateTime @map("start_time")
  endTime     DateTime @map("end_time")
  isActive    Boolean  @default(true) @map("is_active")
  tableTennis Boolean  @default(false) @map("table_tennis")
  badminton   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("reservations")
}

enum CustomerRole {
  ADMIN
  CUSTOMER
}

model Customer {
  id           String        @id @default(cuid())
  name         String
  user         User          @relation(fields: [userId], references: [id])
  userId       String        @unique @map("user_id")
  reservations Reservation[]
  role         CustomerRole  @default(CUSTOMER)

  @@index([userId])
  @@map("customers")
}

model Invitation {
  id           String   @id @default(cuid())
  token        String   @unique
  expiresAt    DateTime @map("expires_at")
  inviter      User     @relation(fields: [inviterId], references: [id])
  inviterId    String   @map("inviter_id")
  emailAddress String   @map("email_address")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("invitations")
}
